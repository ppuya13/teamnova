package java4;

import jdk.swing.interop.SwingInterOpUtils;

import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;



public class Assignment4 {

    public static void main(String[] args) throws InterruptedException {

        //캐릭터 초기화

        능력치 캐릭터 = new 능력치(1,100,0,1000,1000,100,100,30,0,0,0,20,150,10,1000);
        캐릭터.인벤토리초기화();
        캐릭터.스킬초기화();

        //캐릭터 초기화

        //상점 초기화

        상점 상점=new 상점();//상점에 물건들을 진열하기 위한 코드

        ArrayList<String> 상점판매개수 = new ArrayList<>();
        for(int i = 0 ; i<=상점.리스트.size()-1;i++){
            if(상점.리스트.get(i).상점판매여부) {
                상점판매개수.add(상점.리스트.get(i).아이템이름);
            }
        } //진열된 물건들의 종류가 몇 개인지 알기 위한 코드

        //상점 초기화

        boolean 첫시작=true;
        String pause;

        //장면 제어 변수
        int 화면=1; //1:메인화면, 2:사냥터, 3:상점, 4:대장간, 5:전투
        int 세부1=0;
        int 세부2=0;
        boolean 패스 = false;
        int 상점구매=0; //상점창에서 뭘 선택했는지 들어감, 구매완료 또는 취소 후에 0으로 초기화
        String 상점구매이름 = new String();
        boolean 상점구매확인1=false; //
        int 상점판매=0;
        boolean 상점판매확인1=false; //
        int 강화선택=0; //대장간에서 뭘 선택했는지 들어감, 강화 완료 또는 취소 후에 0으로 초기화
        boolean 강화확인=false;
        boolean 턴=false;
        boolean 사망=false;
        메인화면 메인=new 메인화면();
        int 스택가능=0;
        int 구매개수=0;
        int 판매개수=0;
        int 개수=0;
        int 물약여부=0;
        아이템 아이템정보 = null;
        int 회복물약가방크기=0;
        int 인벤토리크기=0;
        int 전체가방크기=0;
        boolean 아이템사용=false;
        boolean 아이템버리기=false;
        int 사용선택=-1;
        boolean 살펴보기출력=false;
        StringBuilder 강화능력치표시 = new StringBuilder();

        int 몬스터발견확률=3;
        int 탐색결과=0;
        Scanner sc = new Scanner(System.in);
        Random rd = new Random();
        int a = -1; // 디폴트 입력값
        int b = 0; // 위 입력값을 받아서 맨 마지막에 한 번 만 초기화되는 변수

        //몬스터변수
        String[] 몬스터종류배열 = {"슬라임","고블린","오크"};
        double 몬스터생성난수;
        int num;
        String 랜덤몬스터결과;

        ArrayList<몬스터> 몬스터어레이 = new ArrayList<>();
        String 몬스터번호; // 각 몬스터마다 고유 번호
        몬스터 몬스터정보; // 몬스터의 이름과 능력치가 들어있음
        int 몬스터머릿수 = 0; // 몬스터 생성시 1~5까지 난수로 생성
        int 죽은몬스터수 = 0; // 몬스터 사망 시 1 상승
        int 죽은몬스터수2= 0; // 몬스터 사망 시 1 상승(이후 초기화)
        //몬스터변수

//        몬스터 몬스터a = new 몬스터("a");
//        몬스터 몬스터b = new 몬스터("b");
//        몬스터 몬스터c = new 몬스터("c");
//        몬스터 몬스터d = new 몬스터("d");
//        몬스터 몬스터e = new 몬스터("e");

        //전투변수
        몬스터 몬스터타겟 = null; //몬스터 삭제에 사용되기 때문에 절대 null을 참조하지 말 것
        boolean 몬스터삭제=false;
        ArrayList<아이템> 드랍템 = new ArrayList<>();
        아이템 드랍아이템;
        int 몬스터난수;
        boolean 전투승리=false;
        boolean 전투종료=false;
        int 경험치허브 = 0;
        boolean 전투아이템사용=false;
        boolean 최종확인=false;
        int 스킬선택 = 0;
        스킬 스킬 = null;
        boolean 스킬발동=false;
        int 스킬타겟=0;
        //전투변수



        while(true) { //메인 반복문
            인벤토리크기=캐릭터.소지품.size();
            회복물약가방크기=캐릭터.회복물약가방.size();
            전체가방크기=인벤토리크기+회복물약가방크기;
            //화면출력 시작
            {
                if (화면 == 1 && 세부1 == 0 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.print(
                            "\n이곳은 마을입니다. 무엇을 하시겠습니까?" +
                                    "\n1.사냥터" +
                                    "\n2.인벤토리" +
                                    "\n3.상점" +
                                    "\n4.대장간" +
                                    "\n5.휴식" +
                                    "\n→");
                } else if (화면 == 1 && 세부1 == 2 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("인벤토리를 열어봅니다." +
                            "\n체력, 마나물약을 제외한 아이템은 20종류까지만 보관 가능합니다.");
                    System.out.println(메인.인벤토리(캐릭터));
                    System.out.print("" +
                            "무엇을 하시겠습니까?" +
                            "\n0.뒤로가기" +
                            "\n1.사용하기 / 장착하기 / 장착 해제하기" +
                            "\n2.버리기" +
                            "\n3.살펴보기" +
                            "\n→");
//                for(int i=1 ; i <= 인벤토리크기-1 ; i++) {
//                    System.out.print(i);
//                    System.out.println(" " + 캐릭터.소지품.get(i).아이템이름);
//                }
                } else if (화면 == 1 && 세부1 == 2 && 세부2 == 1) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n사용하기 / 장착하기 / 장착 해제하기");
                    System.out.println(메인.행동인벤토리(캐릭터));
                    System.out.print("" +
                            "아이템을 선택해주세요." +
                            "\n→");
                } else if (화면 == 1 && 세부1 == 2 && 세부2 == 2) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n아이템 버리기");
                    System.out.println(메인.행동인벤토리(캐릭터));
                    System.out.print("" +
                            "버릴 아이템을 선택해주세요." +
                            "\n→");
                } else if(화면 == 1 && 세부1 == 3 && 세부2 == 0){
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println(메인.행동상점판매목록(캐릭터));
                    System.out.print("" +
                            "\n확인할 아이템을 선택해주세요." +
                            "\n→");
                }else if (화면 == 2 && 세부1 == 0 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.print("" +
                            "\n몬스터를 사냥하러 왔습니다. 무엇을 하시겠습니까?" +
                            "\n0.마을로 돌아가기" +
                            "\n1.탐색" +
                            "\n2.인벤토리" +
                            "\n3.휴식" +
                            "\n→");
                } else if (화면 == 2 && 세부1 == 1 && 세부2 == 0) {
                    탐색결과 = rd.nextInt(몬스터발견확률);
                    if (탐색결과 <= 1) { // 탐색결과가 1이면 몬스터를 발견함
                        탐색결과 = 0; // 탐색결과 초기화
                        //몬스터생성 시작
//                    System.out.println("System : 몬스터 어레이를 초기화합니다.");
                        몬스터어레이.clear();
                        몬스터머릿수 = rd.nextInt(9) + 1;
                        System.out.println(몬스터머릿수 + "마리의 몬스터를 발견했다!!!");
                        Thread.sleep(1000);

                        for (int i = 1; i <= 몬스터머릿수; i++) {
                            몬스터생성난수 = Math.random();
                            num = (int) Math.floor(몬스터생성난수 * 몬스터종류배열.length);
                            랜덤몬스터결과 = 몬스터종류배열[num];

                            몬스터번호 = Integer.toString(i);
                            몬스터정보 = new 몬스터(몬스터번호, 랜덤몬스터결과);
                            몬스터어레이.add(몬스터정보);
                        }
                        //여기서 몬스터 정보를 생성한 뒤 몬스터 클래스로 보내서 객체로 만듦

                        패스 = true;
                        화면 = 5;
                        세부1 = 0;
                    } else {
                        System.out.println("아이템을 발견했다!!!");
                    }
                } else if (화면 == 2 && 세부1 == 2 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("인벤토리를 열어봅니다." +
                            "\n체력, 마나물약을 제외한 아이템은 20종류까지만 보관 가능합니다.");
                    System.out.println(메인.인벤토리(캐릭터));
                    System.out.print("" +
                            "무엇을 하시겠습니까?" +
                            "\n0.뒤로가기" +
                            "\n1.사용하기 / 장착하기 / 장착 해제하기" +
                            "\n2.버리기" +
                            "\n3.살펴보기" +
                            "\n→");
                } else if (화면 == 2 && 세부1 == 2 && 세부2 == 1) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n사용하기 / 장착하기 / 장착 해제하기");
                    System.out.println(메인.행동인벤토리(캐릭터));
                    System.out.print("" +
                            "아이템을 선택해주세요." +
                            "\n→");
                } else if (화면 == 2 && 세부1 == 2 && 세부2 == 2) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n아이템 버리기");
                    System.out.println(메인.행동인벤토리(캐릭터));
                    System.out.print("" +
                            "버릴 아이템을 선택해주세요." +
                            "\n→");
                } else if(화면 == 2 && 세부1 == 3 && 세부2 == 0){
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println(메인.행동상점판매목록(캐릭터));
                    System.out.print("" +
                            "\n확인할 아이템을 선택해주세요." +
                            "\n→");
                }else if (화면 == 3 && 세부1 == 0 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println(메인.상점구매목록(캐릭터, 상점));
                    System.out.print("" +
                            "\n상점에서는 아이템을 구매하거나 판매할 수 있습니다." +
                            "\n0.나가기" +
                            "\n1.구매하기" +
                            "\n2.판매하기(인벤토리)" +
                            "\n→");
                } else if (화면 == 3 && 세부1 == 1 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.print(메인.행동상점구매목록(캐릭터, 상점));
                    System.out.print("" +
                            "\n└──────────────────" +
                            "\n구매할 아이템을 선택하세요." +
                            "\n→");
                } else if(화면 == 3 && 세부1 == 1 && 세부2 == 1 && 스택가능==1) { //선택한 아이템이 스택가능일경우
                    System.out.print("" +
                            상점.상점구매타겟(상점구매) +
                            "을(를) 몇 개 구매하시겠습니까?\n(0개: 취소)" +//변수 '상점구매' 값에 따라 품목 이름을 바꿔넣기 //구현완료
                            "\n→");
                } else if (화면 == 3 && 세부1 == 1 && 세부2 == 1 && 스택가능==2) { //선택한 아이템이 스택불가능일경우
                    System.out.print("" +
                            상점.상점구매타겟(상점구매) +
                            "을(를) "+ 상점.리스트.get(상점구매-1).구매가격+"골드에 구매하시겠습니까?" +//변수 '상점구매' 값에 따라 품목 이름을 바꿔넣기 //구현완료
                            "\n0.취소" +
                            "\n1.확인" +
                            "\n→");
                } else if (화면 == 3 && 세부1 == 2 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println(메인.행동상점판매목록(캐릭터));
                    System.out.print("" +
                            "\n판매할 아이템을 선택해주세요." +
                            "\n→");
                } else if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==1) {
                    if(상점판매<=2){ //상점판매가 2이하면
                        System.out.println(캐릭터.회복물약가방.get(상점판매-1).아이템이름+
                                "(보유량: " + 캐릭터.회복물약가방.get(상점판매-1).스택수+"개)"+
                                "을(를) 몇 개 판매하시겠습니까?\n(0개: 취소)" +
                                "\n→");
                    } else { //상점판매가 3이상이면
                        System.out.print("" +
                                캐릭터.소지품.get(상점판매-3).아이템이름 +
                                "(보유량: " + 캐릭터.소지품.get(상점판매-3).스택수+"개)"+
                                "을(를) 몇 개 판매하시겠습니까?\n(0개: 취소)" +
                                "\n→");
                    }
                } else if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==2) {
                    System.out.print("" +
                            캐릭터.소지품.get(상점판매-3).아이템이름 +
                            "을(를) "+캐릭터.소지품.get(상점판매-3).판매가격+"골드에 판매하시겠습니까?" +//변수 '상점구매' 값에 따라 품목 이름을 바꿔넣기
                            "\n0.취소" +
                            "\n1.확인" +
                            "\n→");
                } else if (화면 == 3 && 세부1 == 3 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.print(메인.행동상점구매목록(캐릭터, 상점));
                    System.out.print("" +
                            "\n└──────────────────" +
                            "\n살펴볼 아이템을 선택하세요." +
                            "\n→");
                } else if (화면 == 4 && 세부1 == 0 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.print("" +
                            "\n대장간에 들어왔습니다. 아이템을 강화할 수 있습니다." +
                            "\n0.나가기" +
                            "\n1.강화하기" +
                            "\n2.살펴보기" +
                            "\n→");
                } else if (화면 == 4 && 세부1 == 1 && 세부2 == 0) { // 대장간 강화할거 선택하는창
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println(메인.행동강화목록(캐릭터));
                    System.out.print(""+
                            "\n강화는 1회에 100골드가 소모되며, 최대 10번까지 강화할 수 있습니다." +
                            "\n강화의 성공확률은 100%입니다." +
                            "\n강화할 아이템을 선택해주세요." +
                            "\n→");
                } else if (화면 == 4 && 세부1 == 1 && 세부2 == 1) {
                    아이템정보 = 캐릭터.강화목록.get(강화선택-1);
                    강화능력치표시.setLength(0);

                    if(아이템정보.착용여부){ // 강화하려고 선택한 아이템이 착용중일 경우
                        System.out.println("\n착용 중인 아이템을 강화할 수 없습니다.");
                        패스=true;
                        세부2=0;
                        Thread.sleep(1000);
                    }
                    else if(캐릭터.소지금<100){ //캐릭터의 소지금이 100미만이라면
                        System.out.println("\n소지금이 부족합니다.");
                        패스=true;
                        세부2=0;
                        Thread.sleep(1000);
                    }
                    else if(아이템정보.강화>=10) {
                        System.out.println("\n더 이상 강화할 수 없습니다.");
                        Thread.sleep(1000);
                        System.out.println("해당 아이템의 추가능력치는");
                        강화능력치표시.append("\n" + 아이템정보.아이템이름 + "\n");
                        if (아이템정보.추가체력 >= 1) { //선택한 아이템이 추가체력이 1 이상일 때
                            강화능력치표시.append("추가 체력: " + 아이템정보.추가체력 + "\n");
                        }
                        if (아이템정보.추가마나 >= 1) {
                            강화능력치표시.append("추가 마나: " + 아이템정보.추가마나 + "\n");
                        }
                        if (아이템정보.추가공격력 >= 1) {
                            강화능력치표시.append("추가 공격력: " + 아이템정보.추가공격력 + "\n");
                        }
                        if (아이템정보.추가방어력 >= 1) {
                            강화능력치표시.append("추가 방어력: " + 아이템정보.추가방어력 + "\n");
                        }
                        if (아이템정보.추가치확 >= 1) {
                            강화능력치표시.append("추가 치명확률: " + 아이템정보.추가치확 + "\n");
                        }
                        if (아이템정보.추가치피 >= 1) {
                            강화능력치표시.append("추가 치명피해: " + 아이템정보.추가치피 + "\n");
                        }
                        System.out.print(강화능력치표시+"입니다. " +
                                "\n계속하려면 아무 숫자나 입력하세요." +
                                "\n→");
                        a=sc.nextInt();
                        a=-1;
                        패스=true;
                        세부2=0;
                    }else{
                        강화능력치표시.append("\n" + 아이템정보.아이템이름 + "\n");
                        if (아이템정보.추가체력 >= 1) { //선택한 아이템이 추가체력이 1 이상일 때
                            강화능력치표시.append("추가 체력: " + 아이템정보.추가체력 + "\n");
                        }
                        if (아이템정보.추가마나 >= 1) {
                            강화능력치표시.append("추가 마나: " + 아이템정보.추가마나 + "\n");
                        }
                        if (아이템정보.추가공격력 >= 1) {
                            강화능력치표시.append("추가 공격력: " + 아이템정보.추가공격력 + "\n");
                        }
                        if (아이템정보.추가방어력 >= 1) {
                            강화능력치표시.append("추가 방어력: " + 아이템정보.추가방어력 + "\n");
                        }
                        if (아이템정보.추가치확 >= 1) {
                            강화능력치표시.append("추가 치명확률: " + 아이템정보.추가치확 + "\n");
                        }
                        if (아이템정보.추가치피 >= 1) {
                            강화능력치표시.append("추가 치명피해: " + 아이템정보.추가치피 + "\n");
                        }
                        강화능력치표시.append("위 아이템을 강화하시겠습니까?" +
                                "\n0.취소하기" +
                                "\n1.강화하기" +
                                "\n→");
                        System.out.print(강화능력치표시);
                    }
                } else if(화면 == 4 && 세부1 == 2 && 세부2 == 0){
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.print(메인.행동강화목록(캐릭터));
                    System.out.print(""+
                            "\n강화하기 전 아이템의 능력치를 확인해볼 수 있습니다." +
                            "\n확인할 아이템을 선택해주세요." +
                            "\n→");
                }else if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && 몬스터머릿수 - 죽은몬스터수 >= 1) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println(메인.몬스터목록(몬스터머릿수, 몬스터어레이, 죽은몬스터수));
                    System.out.print("" +
//                        몬스터머릿수+죽은몬스터수 +"\n"+
                            (몬스터머릿수 - 죽은몬스터수) + "마리의 몬스터가 살아있습니다." +
                            "\n무엇을 하시겠습니까?" +
                            "\n1.공격" +
                            "\n2.스킬" +
                            "\n3.아이템" +
                            "\n4.살펴보기" +
                            "\n5.도망치기" +
                            "\n→");
////                    //아래는 각 몬스터의 드랍테이블이 제대로 들어있는지 확인하는 코드
//                    for(int i = 0 ; i<몬스터머릿수 ; i++){
//                        for(int j = 0 ; j < 몬스터어레이.get(i).드랍테이블.size(); j++){
//                            System.out.println("" +
//                                    ""+몬스터어레이.get(i).이름 + "의 드랍테이블" + (j+1) + " : " +
//                                    몬스터어레이.get(i).드랍테이블.get(j).아이템이름 + ", 드랍테이블개수 : "+몬스터어레이.get(i).드랍테이블.size());
//                        }
//                    }
////                    //위는 각 몬스터의 드랍테이블이 제대로 들어있는지 확인하는 코드

                } else if (화면 == 5 && 세부1 == 1 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n공격할 몬스터를 선택하세요.");
                    System.out.println(메인.행동몬스터목록(몬스터머릿수, 몬스터어레이, 죽은몬스터수));
                    System.out.print("\n→");
                } else if (화면 == 5 && 세부1 == 2 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n보유 중인 스킬 리스트");
                    System.out.println(메인.스킬창(캐릭터));
                    System.out.print("" +
                            "사용할 스킬을 선택해주세요. " +
                            "\n→");
                } else if (화면 == 5 && 세부1 == 2 && 세부2 == 1 && 스킬.타입==1) {//고른 스킬이 단일공격이면
                    System.out.println(스킬.스킬명 + "(마나 "+ 스킬.소모량 + ") : " + 스킬.효과);
                    System.out.println(메인.행동몬스터목록(몬스터머릿수, 몬스터어레이, 죽은몬스터수));
                    System.out.print("" +
                            스킬.스킬명 + "을(를) 사용할 대상을 선택하세요." +
                            "\n→");
                } else if (화면 == 5 && 세부1 == 2 && 세부2 == 1 && 스킬.타입==3) {//고른 스킬이 광역공격이면
                    System.out.println(스킬.스킬명 + "(마나 "+ 스킬.소모량 + ") : " + 스킬.효과);
                    System.out.println(메인.몬스터목록(몬스터머릿수, 몬스터어레이, 죽은몬스터수));
                    System.out.print("" +
                            스킬.스킬명 + "을(를) 정말 사용하시겠습니까?" +
                            "\n0.취소한다." +
                            "\n1.사용한다." +
                            "\n→");
                } else if (화면 == 5 && 세부1 == 3 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n아이템 사용하기");
                    System.out.println(메인.행동인벤토리(캐릭터));
                    System.out.print("" +
                            "아이템을 선택해주세요. " +
                            "\n소모품만을 사용할 수 있으며, 아이템 사용 시 턴을 넘기게됩니다." +
                            "\n→");
                } else if (화면 == 5 && 세부1 == 3 && 세부2 == 1) {
                    System.out.print("" +
                            ""+아이템정보.아이템이름+"을(를) 정말 사용하시겠습니까?" +
                            "\n(" + 아이템정보.아이템효과 + ")" +
                            "\n0.취소한다" +
                            "\n1.사용한다" +
                            "\n→");
                } else if (화면 == 5 && 세부1 == 4 && 세부2 == 0) {
                    System.out.println(메인.능력치창(캐릭터));
                    System.out.println("\n살펴볼 몬스터를 선택하세요.");
                    System.out.println(메인.행동몬스터목록(몬스터머릿수, 몬스터어레이, 죽은몬스터수));
                    System.out.print("\n→");
                } else if (화면 == 5 && 세부1 == 5 && 세부2 == 0) {
                    System.out.print("" +
                            "\n정말 도망치겠습니까?" +
                            "\n1.도망친다" +
                            "\n2.취소한다" +
                            "\n→");
                } else if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && 몬스터머릿수 - 죽은몬스터수 == 0) {
                    System.out.println("\n전투에서 승리했습니다.");
                    캐릭터.사용중.clear();
                    몬스터머릿수 = 0;
                    죽은몬스터수 = 0;
                    몬스터어레이.clear();
                    화면 = 2;
                    패스 = true;
                    턴 = false;
                    전투승리 = true;
                    전투종료 = true;
                }
            }
            //화면출력 끝


//            if(화면==5){
//                전투.main(몬스터머릿수, 몬스터어레이, 죽은몬스터수);
//            }

            //입력값 받기 시작
            if (!패스) {
                a = sc.nextInt();
            }
            패스 = false;
            //입력값 받기 끝


            //1-0-0 시작
            {
                if (화면 == 1 && 세부1 == 0 && 세부2 == 0 && a == 1) {
                    화면 = 2;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 0 && 세부2 == 0 && a == 2) {
                    화면 = 1;
                    세부1 = 2;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 0 && 세부2 == 0 && a == 3) {
                    화면 = 3;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 0 && 세부2 == 0 && a == 4) {
                    화면 = 4;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 0 && 세부2 == 0 && a == 5) {
                    화면 = 2;
                    세부1 = 4;
                    세부2 = 1; //세부2가 1이면 마을에서 휴식, 2면 사냥터에서 휴식
                    a=-1;
                }
                //1-1-0은 없음
                if (화면 == 1 && 세부1 == 2 && 세부2 == 0 && a == 0) {
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 0 && a == 1) {
                    세부2=1;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 0 && a == 2) { //120에서 2(버리기)를 누를경우
                    세부2=2;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 0 && a == 3) { //120에서 3(살펴보기)를 누를경우 130(살펴보기)로 감.
                    세부1=3;
                    a=-1;
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 1 && a == 0) { //
                    세부2 = 0;
                    a = -1;
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 1 && a>=1 && a<=전체가방크기) {//
                    아이템사용=true; //아이템 사용 스크립트 실행용
                    //이 아래는 버리기와 장착하기 에도 동일하게 쓰임
                    if(a<=회복물약가방크기){ //회복물약 내용물을 선택했다면
                        사용선택=a-1;
                        물약여부=1;
                        if(캐릭터.회복물약가방.get(사용선택).스택수==0){ //선택한 물약의 스택수가 0개라면
//                            System.out.println("스택수0개");
                            아이템사용=false;
                            System.out.println("\n"+캐릭터.회복물약가방.get(사용선택).아이템이름+"이 부족합니다.");
                            Thread.sleep(1000);
//                            세부2=1;
                            물약여부=0;
                            사용선택=-1;
                        } //회복물약 이외의 아이템들은 0개가 되는 순간 인벤정리 메소드에 의해 삭제됨.
                    }
                    else{ //회복물약가방 내용물이 아닌것을 선택했다면
                        사용선택 = a-(회복물약가방크기+1);
                        if(캐릭터.소지품.get(사용선택).사용가능여부) { //사용가능한 물건이라면
                            물약여부 = 2;
                        }
                        else{ // 사용 불가능한 물건이라면
                            아이템사용=false;
                            System.out.println("\n사용할 수 없는 아이템입니다.");
                            Thread.sleep(1000);
//                            세부2=1;
                            물약여부=0;
                            사용선택=-1;
                        }
                    }
                    //이 위는 버리기와 장착하기에도 동일하게 쓰임
                    a = -1;
                    System.out.println("아이템사용 : " + 아이템사용);
                    System.out.println("사용선택 : " + 사용선택);
                    System.out.println("물약여부 : " + 물약여부);
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 2 && a == 0) {
                    세부2 = 0;
                    a = -1;
                }
                if (화면 == 1 && 세부1 == 2 && 세부2 == 2 && a>=1 && a<=전체가방크기) {//사용하기 복사한 버리기
                    아이템버리기 = true; //아이템 버리기 스크립트 실행용
                    if (a <= 회복물약가방크기) { //회복물약 내용물을 선택했다면
                        System.out.println("\n회복물약은 버릴 수 없습니다.");
                        Thread.sleep(1000);
                        아이템버리기 = false;
                        사용선택 = -1;
                    } else { //회복물약가방 내용물이 아닌것을 선택했다면
                        사용선택 = a - (회복물약가방크기 + 1);
                        아이템정보 = 캐릭터.소지품.get(사용선택);
                        사용선택 = -1;
                        if (아이템정보.착용여부) { //착용중이라면
                            System.out.println("\n우선 장착을 해제해주세요.");
                            아이템버리기 = false;
                            Thread.sleep(1000);
                            물약여부 = 0;
                        } else if (아이템정보.스택가능여부) { //스택이 가능하다면
                            while (true) {
                                System.out.print("" +
                                        "\n버릴 개수를 입력해주세요. (0개: 취소)" +
                                        "\n→");
                                a = sc.nextInt();
                                if (a == 0) { //버릴 개수를 0개로 입력한다면
                                    아이템버리기 = false;
                                    break;
                                } else if (a >= 1 && a <= 아이템정보.스택수) { //버릴 개수를 1이상, 스택수 이하로 입력했다면
                                    개수 = a;
                                    break;
                                } else if (a > 아이템정보.스택수) { //버릴 개수를 스택수 보다 많게 입력했다면
                                    System.out.println("" +
                                            "\n가진 양보다 많은 양을 버릴 수는 없습니다.");
                                    Thread.sleep(1000);
                                    아이템버리기 = false;
                                    break;
                                }
                            }
                            if (아이템버리기) { //선택한 아이템을 선택한 만큼 버릴건지 최종 확인
                                while (true) { // 0과 1 이외의 숫자를 입력할 경우 무한루프함
                                    System.out.println("" +
                                            "\n정말 " + 아이템정보.아이템이름 + " " + 개수 + " 개를 버리겠습니까?" +
                                            "\n0.취소한다." +
                                            "\n1.버린다.");
                                    a = sc.nextInt();
                                    if (a == 0) {
                                        아이템버리기 = false;
                                        break;
                                    } else if (a == 1) {
                                        break;
                                    }
                                }
                            }
                        } else { //스택이 불가능하다면
                            개수 = 1;
                            while (true) { // 0과 1 이외의 숫자를 입력할 경우 무한루프함
                                System.out.println("" +
                                        "\n정말 " + 아이템정보.아이템이름 + "을(를) 버리겠습니까?" +
                                        "\n0.취소한다." +
                                        "\n1.버린다.");
                                a = sc.nextInt();
                                if (a == 0) {
                                    아이템버리기 = false;
                                    break;
                                } else if (a == 1) {
                                    break;
                                }
                            }
                        }
                        a = -1;
                    }
                }
                if (화면 == 1 && 세부1 == 3 && 세부2 == 0 && a == 0) {
                    세부1 = 2;
                    a = -1;
                }
                if (화면 == 1 && 세부1 == 3 && 세부2 == 0 && a >=1 && a<=회복물약가방크기) {
                    아이템정보 = 캐릭터.회복물약가방.get(a-1);
                    살펴보기출력=true;
                    a = -1;
                }
                if (화면 == 1 && 세부1 == 3 && 세부2 == 0 && a >회복물약가방크기 && a<=전체가방크기){
                    아이템정보 = 캐릭터.소지품.get(a-3);
                    살펴보기출력=true;
                    a = -1;
                }
            }
            //1-0-0 끝

            //2-0-0 시작
            {
                if (화면 == 2 && 세부1 == 0 && 세부2 == 0 && a == 0) {
                    화면 = 1;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 0 && 세부2 == 0 && a == 1) {
                    세부1 = 1;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 0 && 세부2 == 0 && a == 2) {
                    세부1 = 2;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 0 && 세부2 == 0 && a == 3) {
                    세부1 = 4;
                    세부2 = 2; //세부2가 1이면 마을에서 휴식, 2면 사냥터에서 휴식
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 0 && a == 0) {
                    화면 = 2;
                    세부1 = 0;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 0 && a == 1) {
                    화면 = 2;
                    세부2 = 1;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 0 && a == 2) { // 버리기 메소드
                    세부2 = 2;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 0 && a == 3) {
                    세부1 = 3;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 1 && a == 0) {
                    세부2 = 0;
                    a=-1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 1 && a>=1 && a<=전체가방크기) {//
                    아이템사용=true; //아이템 사용 스크립트 실행용
                    //이 아래는 버리기와 장착하기 에도 동일하게 쓰임
                    if(a<=회복물약가방크기){ //회복물약 내용물을 선택했다면
                        사용선택=a-1;
                        물약여부=1;
                        if(캐릭터.회복물약가방.get(사용선택).스택수==0){ //선택한 물약의 스택수가 0개라면
//                            System.out.println("스택수0개");
                            아이템사용=false;
                            System.out.println("\n"+캐릭터.회복물약가방.get(사용선택).아이템이름+"이 부족합니다.");
                            Thread.sleep(1000);
//                            세부2=1;
                            물약여부=0;
                            사용선택=-1;
                        } //회복물약 이외의 아이템들은 0개가 되는 순간 인벤정리 메소드에 의해 삭제됨.
                    }
                    else{ //회복물약가방 내용물이 아닌것을 선택했다면
                        사용선택 = a-(회복물약가방크기+1);
                        if(캐릭터.소지품.get(사용선택).사용가능여부) { //사용가능한 물건이라면
                            물약여부 = 2;
                        }
                        else{ // 사용 불가능한 물건이라면
                            아이템사용=false;
                            System.out.println("\n사용할 수 없는 아이템입니다.");
                            Thread.sleep(1000);
//                            세부2=1;
                            물약여부=0;
                            사용선택=-1;
                        }
                    }
                    //이 위는 버리기와 장착하기에도 동일하게 쓰임
                    a = -1;
//                    System.out.println("아이템사용 : " + 아이템사용);
//                    System.out.println("사용선택 : " + 사용선택);
//                    System.out.println("물약여부 : " + 물약여부);
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 2 && a == 0) {
                    세부2 = 0;
                    a = -1;
                }
                if (화면 == 2 && 세부1 == 2 && 세부2 == 2 && a>=1 && a<=전체가방크기) {//사용하기 복사한 버리기
                    아이템버리기 = true; //아이템 버리기 스크립트 실행용
                    if (a <= 회복물약가방크기) { //회복물약 내용물을 선택했다면
                        System.out.println("\n회복물약은 버릴 수 없습니다.");
                        Thread.sleep(1000);
                        아이템버리기 = false;
                        사용선택 = -1;
                    } else { //회복물약가방 내용물이 아닌것을 선택했다면
                        사용선택 = a - (회복물약가방크기 + 1);
                        아이템정보 = 캐릭터.소지품.get(사용선택);
                        사용선택 = -1;
                        if (아이템정보.착용여부) { //착용중이라면
                            System.out.println("\n우선 장착을 해제해주세요.");
                            아이템버리기 = false;
                            Thread.sleep(1000);
                            물약여부 = 0;
                        } else if (아이템정보.스택가능여부) { //스택이 가능하다면
                            while (true) {
                                System.out.print("" +
                                        "\n버릴 개수를 입력해주세요. (0개: 취소)" +
                                        "\n→");
                                a = sc.nextInt();
                                if (a == 0) { //버릴 개수를 0개로 입력한다면
                                    아이템버리기 = false;
                                    break;
                                } else if (a >= 1 && a <= 아이템정보.스택수) { //버릴 개수를 1이상, 스택수 이하로 입력했다면
                                    개수 = a;
                                    break;
                                } else if (a > 아이템정보.스택수) { //버릴 개수를 스택수 보다 많게 입력했다면
                                    System.out.println("" +
                                            "\n가진 양보다 많은 양을 버릴 수는 없습니다.");
                                    Thread.sleep(1000);
                                    아이템버리기 = false;
                                    break;
                                }
                            }
                            if (아이템버리기) { //선택한 아이템을 선택한 만큼 버릴건지 최종 확인
                                while (true) { // 0과 1 이외의 숫자를 입력할 경우 무한루프함
                                    System.out.println("" +
                                            "\n정말 " + 아이템정보.아이템이름 + " " + 개수 + " 개를 버리겠습니까?" +
                                            "\n0.취소한다." +
                                            "\n1.버린다.");
                                    a = sc.nextInt();
                                    if (a == 0) {
                                        아이템버리기 = false;
                                        break;
                                    } else if (a == 1) {
                                        break;
                                    }
                                }
                            }
                        } else { //스택이 불가능하다면
                            개수 = 1;
                            while (true) { // 0과 1 이외의 숫자를 입력할 경우 무한루프함
                                System.out.println("" +
                                        "\n정말 " + 아이템정보.아이템이름 + "을(를) 버리겠습니까?" +
                                        "\n0.취소한다." +
                                        "\n1.버린다.");
                                a = sc.nextInt();
                                if (a == 0) {
                                    아이템버리기 = false;
                                    break;
                                } else if (a == 1) {
                                    break;
                                }
                            }
                        }
                        a = -1;
                    }
                }
                if (화면 == 2 && 세부1 == 3 && 세부2 == 0 && a == 0) {
                    세부1 = 2;
                    a = -1;
                }
                if (화면 == 2 && 세부1 == 3 && 세부2 == 0 && a >=1 && a<=회복물약가방크기) {
                    아이템정보 = 캐릭터.회복물약가방.get(a-1);
                    살펴보기출력=true;
                    a = -1;
                }
                if (화면 == 2 && 세부1 == 3 && 세부2 == 0 && a >회복물약가방크기 && a<=전체가방크기){
                    아이템정보 = 캐릭터.소지품.get(a-3);
                    살펴보기출력=true;
                    a = -1;
                }
            }
            //2-0-0 끝

            //3-0-0 시작 / 나가기 조건은 현재 7번이지만 상점 품목들을 배열로 놓고 length를 써서 적용해보기.
            {
                if (화면 == 3 && 세부1 == 0 && 세부2 == 0 && a == 0) { // 300에서 0(나가기)를 선택
                    화면 = 1;
                    a=-1;
                }
                if (화면 == 3 && 세부1 == 0 && 세부2 == 0 && a == 1) { // 300에서 1(구매하기)를 선택
                    세부1 = 1;
                    a=-1;
                }
                if (화면 == 3 && 세부1 == 0 && 세부2 == 0 && a == 2) { // 300에서 2(판매하기)를 선택
                    세부1 = 2;
                    a=-1;
                }
                if (화면 == 3 && 세부1 == 0 && 세부2 == 0 && a == 3) { // 300에서 3(살펴보기)를 선택
                    세부1 = 3;
                    a=-1;
                }
                if (화면 == 3 && 세부1 == 1 && 세부2 == 0 && a == 0) { // 310에서 0(취소)를 선택
                    세부1 = 0;
                    a=-1;
                }
                if (화면 == 3 && 세부1 == 1 && 세부2 == 0 && a >= 1 && a <= 상점판매개수.size()) { // 310에서 입력값이 1이상이며 상점리스트개수 이하일때
                    세부2 = 1;
                    상점구매 = a; //뭘 눌러서 구매확인창이 떴는지 확인
                    a=-1;
                    if(상점.리스트.get(상점구매-1).스택가능여부){
                        스택가능=1; //선택한 아이템의 스택가능여부가 true일 경우 스택가능을 1로
                    }
                    else{
                        스택가능=2; //선택한 아이템의 스택가능여부가 false일 경우 스택가능을 2로
                    }
                }
//                if (화면 == 3 && 세부1 == 1 && 세부2 == 1 && 상점구매 <= 2 && b == 1) { //상점 구매확인창에서 구매하기를 누를 경우
//                    System.out.println(상점.상점구매타겟(상점구매)+"을(를) 구매했습니다.");//변수 '상점구매' 값에 따라 품목명을 다르게 넣기
                if (화면 == 3 && 세부1 == 1 && 세부2 == 1 && 스택가능==1 && a==0) { // 스택가능한 아이템을 선택했을 때, 0을 입력했을 경우
                    세부2 = 0;
                    상점구매 = 0;
                    스택가능=0;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 1 && 세부2 == 1 && 스택가능==1 && a>=1) { // (구매 개수 선택창)스택가능한 아이템을 선택했을 때, 1이상의 숫자를 입력했을 때
                    System.out.println(상점.리스트.size());
                    세부2 = 0;
                    구매개수 = a;
                    상점구매확인1 = true;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 1 && 세부2 == 1 && 스택가능==2 && a==0) { //스택 불가능한 아이템을 선택했을 때, 0을 입력했을 경우
                    세부2 = 0;
                    상점구매 = 0;
                    스택가능=0;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 1 && 세부2 == 1 && 스택가능==2 && a==1) { //스택 불가능한 아이템을 선택했을 때 1(구매하기)을 입력했을 경우
                    세부2 = 0;
                    구매개수=a;
                    상점구매확인1=true;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 2 && 세부2 == 0 && a == 0) { //320에서 0(취소)를 선택
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 2 && 세부2 == 0 && a >= 1 && a <= 전체가방크기) { // 320에서 입력값이 1이상이며 소지품 개수 이하일 때
                    세부2 = 1;
                    상점판매 = a; //뭘 눌러서 구매확인창이 떴는지 확인
                    a = -1;
                    if(상점판매<=회복물약가방크기){ //상점판매 값이 1이상이고 회복물약가방의 사이즈 이하면(회복물약가방의 내용물이면)
//                        System.out.println("회복물약가방 이프문 진입");
                        물약여부=1;
                        스택가능=1; //선택한 아이템의 스택가능여부가 true일 경우 스택가능을 1로
                    }
                    else {//상점판매 값이 3이상이고 소지품 사이즈 이하면
//                        System.out.println("상점판매 : "+상점판매 + ", 상점구매 : "+상점구매 + ", 회복물약가방크기 : " + 회복물약가방크기 + ", 인벤토리크기 : "+인벤토리크기);
//                        System.out.println("@@@@@@@@@@캐릭터.소지품.get(상점판매-3)는 " + 캐릭터.소지품.get(상점판매-3).아이템이름);
                        if(캐릭터.소지품.get(상점판매-3).스택가능여부){ //스택가능여부가 true면
                            스택가능=1;
                            물약여부=2;
                        }
                        else{
                            스택가능=2;
                            물약여부=2;
                        }
                    }
                } //
                if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==1 && a == 0) { //상점 판매개수 확인창에서 0을 입력할경우
                    세부2 = 0;
                    상점판매 = 0;
                    스택가능=0;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==1 && a >=1 && 물약여부==1) { //321이고 스택가능한 아이템이고 b가 1이상이고 물약일때
                    System.out.println("@@@@@"+캐릭터.회복물약가방.get(상점판매-1).스택수);
                    if(a<=캐릭터.회복물약가방.get(상점판매-1).스택수) {//스택수 이하의 숫자를 입력했을 때
                        세부2 = 0;
                        판매개수 = a;
                        상점판매확인1 = true;
                        a = -1;
                    }
                    else{
                        System.out.println("\n보유량 이하의 값을 입력해주세요.");
                    }
                }
                if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==1 && a >=1 && 물약여부==2) { //321이고 스택가능한 아이템이고 b가 1이상이고 물약이 아닐때
                    System.out.println("@@@@@"+캐릭터.소지품.get(상점판매-3).스택수);
                    if(a<=캐릭터.소지품.get(상점판매-3).스택수) {
                        세부2 = 0;
                        판매개수 = a;
                        상점판매확인1 = true;
                        a = -1;
                    }
                    else{
                        System.out.println("\n보유량 이하의 값을 입력해주세요.");
                    }
                }
                if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==2 && a == 0) { //상점 판매확인창(스택불가능)에서 0(취소) 를 입력했을 경우
                    세부2 = 0;
                    상점판매 = 0;
                    스택가능=0;
                    a = -1;
                }
                if (화면 == 3 && 세부1 == 2 && 세부2 == 1 && 스택가능==2 && a == 1) { //상점 판매확인창(스택불가능)에서 1(확인) 을 입력했을 경우
                    세부2 = 0;
                    판매개수= 1;
                    상점판매확인1=true;
                    a = -1;
                }
                //상점은 살펴보기를 넣기 애매함
//                if (화면 == 3 && 세부1 == 3 && 세부2 == 0 && a == 0) { //330에서 0(취소)를 선택
//                    세부1 = 0;
//                    a = -1;
//                }
//                if (화면 == 3 && 세부1 == 3 && 세부2 == 0 && a >=1 && a<=회복물약가방크기) {
//                    아이템정보 = 캐릭터.회복물약가방.get(a-1);
//                    살펴보기출력=true;
//                    a = -1;
//                }
//                if (화면 == 3 && 세부1 == 3 && 세부2 == 0 && a >회복물약가방크기 && a<=전체가방크기){
//                    System.out.println("전체가방크기 : "+전체가방크기);
//                    아이템정보 = 캐릭터.소지품.get(a-3);
//                    살펴보기출력=true;
//                    a = -1;
//                }
                //상점에 구매수량제한을 넣어야 할 것 같음. 고민해보기.
                //포션의 경우엔 구매 수량을 입력할 수 있게 해보기.
            }
            //3-0-0 끝 / 나가기 조건은 현재 7번이지만 상점 품목들을 배열로 놓고 length를 써서 적용해보기.

            //4-0-0 시작
            {
                if (화면 == 4 && 세부1 == 0 && 세부2 == 0 && a == 0) {//400에서 0(나가기)를 선택
                    화면 = 1;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 0 && 세부2 == 0 && a == 1) {
                    세부1 = 1;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 0 && 세부2 == 0 && a == 2) {
                    세부1 = 2;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 1 && 세부2 == 0 && a == 0) { //뭐 강화할지 선택하는 창(410)에서 나가기 누를시
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 1 && 세부2 == 0 && a >= 1 && a<=캐릭터.강화목록.size()) {
                    세부2 = 1;
                    강화선택 = a; //뭘 눌러서 강화확인창이 떴는지 확인
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 1 && 세부2 == 1 && a == 0) { //강화확인창(411)에서 0(취소)를 누를경우
                    세부2 = 0;
                    강화선택 = 0;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 1 && 세부2 == 1 && a == 1) { //411에서 1(강화하기)를 선택
                    System.out.println(아이템정보.아이템이름+"을(를) 강화합니다.");
                    세부2 = 0;
                    강화확인 = true;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 2 && 세부2 == 0 && a == 0) { //420에서 0(취소하기)를 선택
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 4 && 세부1 == 2 && 세부2 == 0 && a >= 1 && a <= 캐릭터.강화목록.size()) { //420에서 1이상을 선택
                    아이템정보 = 캐릭터.강화목록.get(a-1);
                    살펴보기출력=true;
                    a = -1;
                }
            }
            //4-0-0 끝

            //5-0-0(전투화면) 시작
            {
                if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && a == 1) {
                    세부1 = 1;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && a == 2) {
                    세부1 = 2;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && a == 3) {
                    세부1 = 3;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && a == 4) {
                    세부1 = 4;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 0 && 세부2 == 0 && a == 5) {
                    세부1 = 5;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 1 && 세부2 == 0 && a == 0) {
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 1 && 세부2 == 0 && a > 0 && a <= 몬스터머릿수 - 죽은몬스터수) { //공격실행
                    //기본공격으로 몬스터중 하나를 선택했을 때
                    몬스터타겟 = 몬스터어레이.get(a-1);
                    b=a-1;
//                    몬스터어레이.set(a-1, 캐릭터.캐릭터공격(몬스터타겟)); //공격에 맞은 타겟의 정보를 몬스터어레이에 덮어씌움
                    캐릭터.캐릭터공격(몬스터타겟);
                    몬스터삭제 = true;
                    세부1 = 0;
                    a = -1;
                    턴 = true;
//                    몬스터타겟 = null;
                }
                if (화면 == 5 && 세부1 == 2 && 세부2 == 0 && a == 0) {
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 2 && 세부2 == 0 && a >= 1 && a <= 캐릭터.스킬목록.size()) {
                    스킬 = 캐릭터.스킬목록.get(a-1);
                    세부2 = 1;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 2 && 세부2 == 1 && a == 0) {
                    스킬 = null;
                    세부1 = 2;
                    세부2 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 2 && 세부2 == 1 && 스킬.타입 == 1 && a >= 1 && a <= 몬스터머릿수 - 죽은몬스터수) { //단일스킬 실행
                    //단일 공격 스킬 선택 시 몬스터 하나를 선택했을 때
                    스킬타겟 = a-1;
                    몬스터타겟 = 몬스터어레이.get(a-1);
                    턴=true;
                    스킬발동=true;
                    세부1=0;
                    세부2=0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 2 && 세부2 == 1 && 스킬.타입 == 3 && a == 1 ) { //광역스킬 실행
                    //광역 공격 스킬 선택 시 1(확인)을 선택했을 때
                    세부1=0;
                    세부2=0;
                    턴=true;
                    스킬발동=true;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 3 && 세부2 == 0 && a == 0) {
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 3 && 세부2 == 0 && a>=1 && a<=전체가방크기) {//
                    전투아이템사용=true; //전투아이템 사용 스크립트 실행용
                    세부2=1;
                    if(a<=회복물약가방크기){ //회복물약 내용물을 선택했다면
                        사용선택=a-1;
                        물약여부=1;
                        아이템정보 = 캐릭터.회복물약가방.get(사용선택);
                        if(아이템정보.스택수==0){ //선택한 물약의 스택수가 0개라면
//                            System.out.println("스택수0개");
                            전투아이템사용=false;
                            System.out.println("\n"+아이템정보.아이템이름+"이 부족합니다.");
                            Thread.sleep(1000);
//                            세부2=1;
                            물약여부=0;
                            사용선택=-1;
                            세부2=0;
                        } //회복물약 이외의 아이템들은 0개가 되는 순간 인벤정리 메소드에 의해 삭제됨.
                    }
                    else{ //회복물약가방 내용물이 아닌것을 선택했다면
                        사용선택 = a-(회복물약가방크기+1);
                        아이템정보 = 캐릭터.소지품.get(사용선택);
                        if(아이템정보.사용가능여부) { //사용가능한 물건이라면
                            if(아이템정보.착용가능여부){ //착용가능하면
                                전투아이템사용=false;
                                System.out.println("전투중엔 아이템 장비/해제가 불가능합니다.");
                                Thread.sleep(1000);
                                물약여부=0;
                                사용선택=-1;
                                세부2=0;
                            }
                            else {
                                물약여부 = 2;
                            }
                        }
                        else{ // 사용 불가능한 물건이라면
                            전투아이템사용=false;
                            System.out.println("\n사용할 수 없는 아이템입니다.");
                            Thread.sleep(1000);
//                            세부2=1;
                            물약여부=0;
                            사용선택=-1;
                            세부2=0;
                        }
                    }
                    a = -1;
//                    System.out.println("아이템사용 : " + 아이템사용);
//                    System.out.println("사용선택 : " + 사용선택);
//                    System.out.println("물약여부 : " + 물약여부);
                }
                if (화면 == 5 && 세부1 == 3 && 세부2 == 1 && a == 0) {
                    전투아이템사용=false;
                    물약여부=0;
                    사용선택=-1;
                    세부2 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 3 && 세부2 == 1 && a == 1) {
                    최종확인=true;
                    세부1 = 0;
                    세부2 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 4 && 세부2 == 0 && a == 0) {
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 4 && 세부2 == 0 && a > 0 && a <= 몬스터머릿수 - 죽은몬스터수) {
                    몬스터타겟 = 몬스터어레이.get(a-1);
                    System.out.println(메인.정보출력(몬스터타겟));
                    System.out.print("" +
                            "\n계속하려면 아무 숫자나 입력하세요." +
                            "\n→");
                    a=sc.nextInt();
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 5 && 세부2 == 0 && a == 1) {
                    System.out.println("도망쳤습니다.");
                    캐릭터.사용중.clear();
                    전투종료 = true;
                    몬스터머릿수 = 0;
                    죽은몬스터수 = 0;
                    몬스터어레이.clear();
                    화면 = 2;
                    세부1 = 0;
                    a = -1;
                }
                if (화면 == 5 && 세부1 == 5 && 세부2 == 0 && a == 2) {
                    세부1 = 0;
                    a = -1;
                }
            }
            //5-0-0(전투화면) 끝

            //6-0-0(전투결과화면) 시작
            //폐기
            //6-0-0(전투결과화면) 끝

            //치트코드시작
            if(a==456){
                System.out.println("show me the money");
                캐릭터.소지금 = 캐릭터.소지금+500;
                a = -1;
            }
            if(a==456456){
                System.out.println("show me the money !!!");
                캐릭터.소지금 = 캐릭터.소지금+5000;
                a = -1;
            }
            //치트코드끝

            //특수스크립트 시작(뒤에 입력을 받지 않는 스크립트들)
            {
                //상점 구매시작
                if (상점구매 != 0 && 상점구매확인1) {
//                        System.out.println("상점구매스크립트 발동");
                    상점구매확인1 = false;
                    //변수 '상점구매' 값에 따라 인벤토리에 아이템을 추가하는 줄
                    //구매가격에 따라 소지금에서 차감
//                        System.out.println(상점.상점구매타겟(상점구매)); //구매할 아이템의 이름을 임시로 표시
                    캐릭터.상점구매(상점구매,상점,스택가능,구매개수);
                    상점구매 = 0;
                    스택가능=0;
                    구매개수=0;
                }
                //상점 구매 끝

                //상점 판매시작
                if (상점판매 != 0 && 상점판매확인1) {
//                    System.out.println("상점판매스크립트 발동");
                    상점판매확인1 = false;
                    //변수 '상점판매' 값에 따라 인벤토리에서 아이템을 추가하는 줄
                    //판매가격에 따라 소지금에 가산
                    캐릭터.상점판매(상점판매,스택가능,판매개수,물약여부);
                    캐릭터.인벤정리();
                    물약여부 = 0;
                    상점판매 = 0;
                    스택가능 = 0;
                    판매개수 = 0;
                }
                //상점 판매 끝

                //강화리스트생성 시작(추후에 대장간에 진입할때만 작동하도록 위치를 옮기던가 해서 조치하는 것도 고려해보기)
                캐릭터.강화리스트생성();
                //강화리스트생성 끝(추후에 대장간에 진입할때만 작동하도록 위치를 옮기던가 해서 조치하는 것도 고려해보기)

                //장비 강화시작
                if (강화선택 != 0 && 강화확인) {
//                    System.out.println("강화스크립트 발동");
                    강화확인 = false;
                    //변수 '강화선택' 값에 해당하는 아이템에 강화를 시도
                    //실패와 성공 난수로 처리 후 결과 출력
                    캐릭터.아이템강화(아이템정보);
                    강화선택 = 0;
                    아이템정보 = null;
                }
                //장비 강화끝

                //아이템 사용 시작
                if (사용선택+1 != 0 && 아이템사용){ //여기에 온 시점에 이미 사용 가능한 아이템임.
                    아이템사용=false;
                    if(물약여부==1){ //물약이면
//                        System.out.println("물약사용메소드 호출");
                        캐릭터.아이템사용(물약여부, 사용선택);
                    }
                    else{ //물약이 아니면
//                        System.out.println("아이템장착메소드 호출");
                        if(캐릭터.소지품.get(사용선택).착용가능여부){ //착용가능하면
                            캐릭터.아이템장착(사용선택);
                        }
                        else{ //사용 가능하지만 물약도 아니고 착용도 불가능하면(소거법에 의해 소모아이템으로 판정)
//                            System.out.println("소모아이템사용메소드 호출");
                            캐릭터.아이템사용(물약여부, 사용선택);
                        }
                    }
                    캐릭터.인벤정리();
                    물약여부=0;
                    사용선택=-1;
                }
                //아이템 사용 끝

                //전투화면 아이템사용 시작
                if (사용선택+1 != 0 && 전투아이템사용 && 최종확인){ //여기에 온 시점에 이미 사용 가능한 아이템임.
                    전투아이템사용=false;
                    최종확인=false;
                    System.out.println(아이템정보.아이템이름 + "을(를) 사용합니다.");
                    Thread.sleep(1000);
                    if(물약여부==1){ //물약이면
//                        System.out.println("전투중 물약사용메소드 호출");
                        캐릭터.전투아이템사용(물약여부, 사용선택);
                    }
                    else{ //물약이 아니면
//                        System.out.println("전투중 소모아이템사용메소드 호출");
                        캐릭터.전투아이템사용(물약여부, 사용선택);
                    }
                    아이템정보=null;
                    턴=true;
                    캐릭터.인벤정리();
                    물약여부=0;
                    사용선택=-1;
                }
                //전투화면 아이템사용 끝

                //아이템버리기 시작
                if(아이템버리기){
                    캐릭터.아이템버리기(개수, 아이템정보);
                    아이템버리기=false;
                    개수=0;
                    아이템정보=null;
                    캐릭터.인벤정리();
                }
                //아이템버리기 끝

                //인벤살펴보기 시작
                if(살펴보기출력&& 화면!=4){
                    System.out.println(메인.살펴보기(아이템정보));
                    System.out.print("넘기려면 아무 숫자나 입력하세요." +
                            "\n→");
                    a=sc.nextInt();
                    a=-1;
                    살펴보기출력=false;
                    아이템정보=null;
                    물약여부=0;
                }
                //인벤살펴보기 끝

                //강화살펴보기 시작
                if(살펴보기출력&& 화면==4) {
                    System.out.println(메인.장비살펴보기(아이템정보));
                    System.out.print("넘기려면 아무 숫자나 입력하세요." +
                            "\n→");
                    a=sc.nextInt();
                    a=-1;
                    살펴보기출력=false;
                    아이템정보=null;
                }
                //강화살펴보기 끝

                //휴식 시작
                if (화면 == 2 && 세부1 == 4) {
                    System.out.println("\n휴식합니다.");
                    Thread.sleep(1000);
                    if (캐릭터.캐릭터최종체력 - 캐릭터.캐릭터현재체력 >= 300) {
                        캐릭터.캐릭터현재체력 = 캐릭터.캐릭터현재체력 + 300;
                        System.out.print("\n체력이 300회복되어 " + 캐릭터.캐릭터현재체력 + "이(가) 되었습니다." +
                                "\n계속하려면 아무 숫자나 입력하세요." +
                                "\n→");

                    } else {
                        System.out.print("\n체력이 " + (캐릭터.캐릭터최종체력 - 캐릭터.캐릭터현재체력) + "회복되어 ");
                        캐릭터.캐릭터현재체력 = 캐릭터.캐릭터최종체력;
                        System.out.print(캐릭터.캐릭터현재체력 + "이(가) 되었습니다." +
                                "\n계속하려면 아무 숫자나 입력하세요." +
                                "\n→");
                    }
                    a = sc.nextInt();
                    if (세부2 == 1) {
                        화면 = 1;
                    }
                    세부1 = 0;
                    세부2 = 0;
                    a = -1;
                }
                //휴식 끝

                //스킬사용 시작
                if(스킬발동){
                    System.out.println("스킬발동");
                    스킬발동=false;
                    if(캐릭터.캐릭터현재마나>=스킬.소모량) { //현재마나가 소모량 이상이면
                        if (스킬.타입 == 1) {
                            System.out.println("단일스킬발동");
                            캐릭터.단일스킬(몬스터타겟, 스킬);
                        } else if (스킬.타입 == 2) {
                            System.out.println("다중스킬발동");
                            몬스터타겟=몬스터어레이.get(0);
                            캐릭터.다중스킬(몬스터어레이, 스킬, 스킬타겟);
                        } else if(스킬.타입 ==3){
                            몬스터타겟=몬스터어레이.get(0);
                            System.out.println("광역스킬발동");
                            캐릭터.광역스킬(몬스터어레이, 스킬);
                        }
                    }
                    else{ //마나가 부족하면
                        System.out.println("마나가 부족합니다.");
                        Thread.sleep(1000);
                    }
                    몬스터삭제 = true;
                    스킬타겟 = 0;
                    스킬 = null;
                }
                //스킬사용 끝

                //능력치 적용 시작
                {
                    캐릭터.장비능력치적용();
                    if (턴) {
                        캐릭터.소모템적용(); //소모템 지속시간도 여기서 감소시킴
                    }
                    캐릭터.최종능력치적용();
                }
                //능력치 적용 끝

                //몬스터삭제 시작(이 작업은 무조건 전투턴넘기기 이전이 진행해야 함)
                while (몬스터삭제) {
//                    System.out.println("몬스터삭제 while문 시작");
//                    System.out.println(몬스터어레이.size());
                    if(몬스터어레이.size()==0){ //몬스터어레이의 크기가 0이면 바로 나감
                        몬스터삭제=false;
                    }
                    else{ //몬스터어레이의 크기가 0이 아니면 몬스터 삭제 시작
                        for (int i = 0; i < 몬스터어레이.size(); i++) {//전체공격에 대응하기 위해 for문을 사용하여 체력이 0이 된 몬스터들을 한마리씩 찾아서 없앰
//                            System.out.println("몬스터어레이의 " + i + "번째 몬스터 이름 : " + 몬스터어레이.get(i).이름 + ", 체력 : " + 몬스터어레이.get(i).현재체력 + "어레이 길이 : " + 몬스터어레이.size());
                            if (몬스터타겟 != null) {
//                                System.out.println("몬스터삭제 실행");
                                if (몬스터어레이.get(i).현재체력 <= 0) { //몬스터어레이에 체력이 0이하인 몬스터가 있으면
                                    //이 아래에 몬스터가 죽었을 경우 일어나는 일을 코딩

                                    //아이템 드랍 시작
                                    for(int j = 0 ; j < 몬스터어레이.get(i).드랍테이블.size() ; j++){ //해당 몬스터의 드랍테이블의 사이즈만큼 반복
                                        몬스터난수 = rd.nextInt(100); //0~99
//                                        System.out.println("난수 : " + 몬스터난수 + ", 드랍테이블의 드랍률 : "+몬스터어레이.get(i).드랍테이블.get(j).드랍률);
                                        if(몬스터난수<몬스터어레이.get(i).드랍테이블.get(j).드랍률){ //드랍률이 10이면 0~9까지가 성공
                                            System.out.println("" + 몬스터어레이.get(i).이름 + "이(가) 쓰러지며 " + 몬스터어레이.get(i).드랍테이블.get(j).아이템이름 + "을(를) 남겼다.");
                                            드랍아이템 = new 아이템(몬스터어레이.get(i).드랍테이블.get(j).고유번호); //난수판정이 성공한 아이템과 동일한 아이템을 새로운 객체로 생성
                                            드랍템.add(드랍아이템); //생성한 아이템을 드랍템 어레이에 넣음
                                        }
                                    }
                                    //아이템 드랍 끝
                                    경험치허브 = 경험치허브 + 몬스터어레이.get(i).경험치;
                                    System.out.println("전투 승리 시 받을 경험치가 " + 몬스터어레이.get(i).경험치 + " 늘어 " + 경험치허브 + "이(가) 되었다.");
                                    Thread.sleep(1000);
                                    System.out.println("");
                                    몬스터어레이.remove(i); //몬스터어레이에서 몬스터를 삭제
                                    죽은몬스터수 = 죽은몬스터수 + 1; //전투종료를 위해 죽은몬스터수를 늘림(근데 그냥 전투종료 조건을 몬스터어레이가 0이면으로 바꾸는 것도 고려해보기)
                                    break;
                                }
                            }
                            if(i==몬스터어레이.size()-1){ //몬스터어레이에 체력이 0이하인 몬스터가 없으면
//                                System.out.println("몬스터어레이와 i의 값이 같아졌으므로 몬스터삭제를 false로 함.");
                                몬스터삭제=false;
                            }
                        }
                    }
                    아이템정보 = null; //다른데서 쓰던 변수를 가져온거라 밖에서 널참조를 하면 에러가 날 수도 있으니 안에서 실행(선언도 안에서하고 안에서만 사용함)
                }
                몬스터타겟 = null;
                //몬스터삭제 끝(이 작업은 무조건 전투턴넘기기 이전이 진행해야 함)

                //전투턴넘기기 시작
                if (화면 == 5 && 턴 && 몬스터머릿수 - 죽은몬스터수 >= 1) {
                    사망 = 몬스터.몬스터공격(몬스터어레이, 몬스터머릿수 - 죽은몬스터수, 캐릭터);
                    세부1 = 0;
                    세부2 = 0;
                    턴 = false;
                }
                //전투턴넘기기 끝

                //전투정산 시작
                if(전투종료){//전투종료시
                    캐릭터.전투정산(전투승리,드랍템,경험치허브);
                    전투승리 = false;
                    전투종료 = false;
                    드랍템.clear(); //
                    경험치허브 = 0;
                }
                //전투정산 끝

                //혹시모르니 한번더 입력값초기화
                a = -1;
                b = -1;
            }
            //특수스크립트 끝(뒤에 입력을 받지 않는 스크립트들)
            if(사망){
                System.exit(0);
            }
            //
            System.out.print("\n화면 : "+화면);
            System.out.print("\n세부1: "+세부1);
            System.out.print("\n세부2: "+세부2+"\n");


        }//제일바깥쪽 while문 닫힘
    }//psvm 닫힘

}//class 닫힘
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





